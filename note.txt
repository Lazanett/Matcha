DATABASE
creation d'un docker pour contenir la base de donnee mysql 
car pas de droit sudo a 42

* creer un docker compose
* lancer le docker : docker-compose up -d
* eteindre le docker : docker-compose down

creation database :

1 Lancer le docker = docker compose up -d
2 lister les dockers (etre sur qu'il est lancer) = docker ps
3 Connexion MYSQL = docker exec -it matcha_mysql mysql -u matcha_user -p
  (mot de passe : matcha_password)

4 Arreter le docker = (avant quitter mysql avec "exit;")
                    = docker compose down
                    = si marche pas = docker stop matcha_mysql


Réinitialisation complète (tt donnee) = docker compose down -v


Liste les volumes Docker = docker volume ls 
Voir où le volume est stocké = docker volume inspect mysql_data 

VOIR LOGS = docker compose logs -f

==========================================================================
liste : id, name, prenom, pseudo, email, genre(f/M/O), SexualPref, age, password, 
        nblike, tags, famerating, biography, location.

==========================================================================
                      JWT (JSON Web Token) 

jeton sécurisé qui permet d'authentifier un utilisateur sans 
stocker son état côté serveur. tilisé pour la connexion des 
utilisateurs et la gestion des permissions.

Quand un utilisateur se connecte, le serveur génère un JWT, qui 
est ensuite envoyé au client (navigateur, application mobile, etc.).
À chaque requête protégée, le client envoie ce token pour prouver 
son identité.

STRUCTURATION 

JWT = chaîne de caractères encodée 3 parties, séparées par des points 
  ex = xxxxxxxx.yyyyyyyy.zzzzzzzz
        |          |          |
      HEADER    PLAYLOAD    SIGNATURE
        |          |          |
        |          |          |
        |          |      (verif authenticiter)
        |          |
        |  (donnee utilisateur: ID...)
        |
(info algo utiliser)
=========================================================================
                    THUNDER client

Sert a verif si requete sur base de donnee.
Pas postman car pas droit sudo donc pas arriver a instalation, 
1 Changer la methode (post, get),
2 Mettre d'url (ex : http://localhost:5000/auth/signup)
3 Aller de "Body" -> JSON et mettre un contenu
4 Appuyer sur 'SEND'


==========================================================================
                     AUTHENTIFICATION

✅ Créer un utilisateur avec un UUID unique lors de l'inscription.
✅ Stocker l'utilisateur en base de données avec un mot de passe hashé.
✅ Générer un JWT contenant l'UUID de l'utilisateur lors de la connexion.
✅ Vérifier le JWT avec un middleware et protéger une route.
✅ Accéder à ta route protégée et voir l'UUID de l'utilisateur authentifié.




✅ S'inscrire avec email et mot de passe (sujet le demande) 
✅ inscription puis login puis update info profile (profile full)
✅ Protection de toutes les routes (middleware) dans arg des routes
 
A FAIRE = docker rendre permanent tables (et ses donnees) dans matcha
          Faire un script qui creer des utilisateurs random dans matcha
===========================================================================
                CREATIONS TABLES user/utilisateurs

CREATE TABLE utilisateurs (
    id INT AUTO_INCREMENT PRIMARY KEY,
    uuid VARCHAR(36) NOT NULL UNIQUE,
    email VARCHAR(255) NOT NULL UNIQUE,
    mot_de_passe VARCHAR(255) NOT NULL,
    nom VARCHAR(100),
    prenom VARCHAR(100),
    pseudo VARCHAR(50) UNIQUE,
    age INT CHECK (age >= 18),
    genre ENUM('F', 'M', 'O') NOT NULL DEFAULT 'O',
    prefSex ENUM('F', 'M', 'O') NOT NULL DEFAULT 'O,
    profil_complet BOOLEAN DEFAULT FALSE
);

==========================================================================
                          MATCHING

SUJET = regarder genre de la personne et voir son orientation si O = F/M
- La même zone géographique que l'utilisateur.
- Un maximum de tags communs.
- Un maximum d'indices de notoriété.

recommander d'abord mm zone géographique
ensuite : par l'age, zone geo, framerating et common tags

doit pouvoir METTRE DES FILTRES DANS LA RECHERCHE : - age, 
                                                    - zone geo,
                                                    - framerating,
                                                    - tags.